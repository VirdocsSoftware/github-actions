name: GitFlow Workflow

on:
  push:
    branches:
      - develop
      - main
  pull_request:
    types: [opened, synchronize, reopened, ready_for_review]
    branches:
      - develop
      - main
      - release/*
      - hotfix/*

env:
  WORKFLOW_VERSION: 1.0.0
  JIRA_DOMAIN: virdocs
jobs:
  initialize:
    name: Initialize
    runs-on: ubuntu-latest
    timeout-minutes: 5
    if: github.event.pull_request.draft == false
    steps:
      - uses: actions/checkout@v4
  unit-tests:
    name: Unit Tests
    needs: [initialize]
    if: |
      ! ( github.event_name == 'push' &&
      github.ref == 'refs/heads/main' )
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - uses: actions/checkout@v4

  feature-tests:
    name: Feature Tests
    needs: [initialize]
    runs-on: ubuntu-latest
    if: |
      ! ( github.event_name == 'push' &&
      github.ref == 'refs/heads/main' )
    timeout-minutes: 15
    steps:
      - uses: actions/checkout@v4

  deploy-check:
    name: Deployment Check
    runs-on: ubuntu-latest
    timeout-minutes: 1
    if: |
      ! contains(github.event.pull_request.body, '[x] Skip CD')
    steps:
      - name: Announce Deployment
        run: echo "This will be deployed"

  check-release:
    name: Check Release
    timeout-minutes: 5
    if: |
      startsWith(github.head_ref,'release/v') || startsWith(github.head_ref,'hotfix/v') ||
      (github.event_name == 'push' && github.ref == 'refs/heads/main')
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Install Dependencies
        run: |
          sudo apt install figlet
      - name: Confirm Release Version
        run: |
          tooling/scripts/check_release_version.sh
        env:
          CURRENT_BRANCH: ${{ github.head_ref }}
          TARGET_BRANCH: ${{ github.base_ref }}
          EVENT: ${{ github.event_name }}

  semantic-pre-release:
    name: Semantic Pre Release
    needs: [deploy-check, unit-tests, feature-tests, initialize]
    runs-on: ubuntu-latest
    timeout-minutes: 15
    permissions:
      contents: write
    if: |
      github.event_name == 'push' &&
      github.ref == 'refs/heads/develop'
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: actions/setup-node@v4
        with:
          node-version: "22.x"
      - name: Run semantic release
        run: npx semantic-release@23 -d
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  deploy-to-develop:
    name: Deploy to Develop
    needs: [deploy-check, unit-tests, feature-tests, initialize]
    environment: develop
    runs-on: ubuntu-latest
    timeout-minutes: 15
    if: |
      github.event_name == 'push' &&
      github.ref == 'refs/heads/develop'
    steps:
      - uses: actions/checkout@v4

  integration-testing:
    name: Integration Testing
    needs: [deploy-to-develop, initialize]
    runs-on: ubuntu-latest
    timeout-minutes: 20
    steps:
      - uses: actions/checkout@v4

  deploy-to-staging:
    name: Deploy to Staging
    needs: [deploy-check, unit-tests, feature-tests, check-release, initialize]
    environment: staging
    runs-on: ubuntu-latest
    timeout-minutes: 15
    if: |
      github.event_name == 'pull_request' && github.base_ref == 'main' &&
      (startsWith(github.head_ref, 'release/v') || startsWith(github.head_ref, 'hotfix/v'))
    steps:
      - uses: actions/checkout@v4

  deploy-to-production:
    name: Deploy to Production
    needs: [deploy-check, check-release, initialize]
    environment: production
    runs-on: ubuntu-latest
    timeout-minutes: 15
    if: |
      github.event_name == 'push' &&
      github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v4

  semantic-release:
    name: Semantic Release
    runs-on: ubuntu-latest
    timeout-minutes: 15
    permissions:
      contents: write
    needs: [deploy-to-production]
    if: |
      github.event_name == 'push' &&
      github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: actions/setup-node@v4
        with:
          node-version: "22.x"
      - name: Run semantic release
        run: npx semantic-release@23
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
